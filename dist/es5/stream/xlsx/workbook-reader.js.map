{"version":3,"file":"workbook-reader.js","names":["fs","require","EventEmitter","PassThrough","Readable","nodeStream","unzip","tmp","iterateStream","parseSax","StyleManager","WorkbookXform","RelationshipsXform","WorksheetReader","HyperlinkReader","setGracefulCleanup","WorkbookReader","constructor","input","options","arguments","length","undefined","worksheets","sharedStrings","hyperlinks","styles","entries","init","_getStream","createReadStream","Error","concat","read","eventType","value","parse","emit","error","Symbol","asyncIterator","stream","zip","Parse","forceStream","pipe","waitingWorkSheets","entry","match","sheetNo","path","_parseRels","_parseWorkbook","_parseSharedStrings","_parseStyles","workbookRels","_parseWorksheet","Promise","resolve","reject","file","err","fd","tempFileCleanupCallback","push","tempStream","createWriteStream","on","_parseHyperlinks","autodrain","fileStream","_emitEntry","payload","xform","parseStream","type","workbook","properties","map","workbookPr","model","text","richText","index","font","events","node","name","bold","charset","parseInt","attributes","color","rgb","argb","val","theme","family","italic","outline","size","underline","vertAlign","iterator","id","worksheetReader","matchingRel","find","rel","Target","matchingSheet","sheets","sheet","rId","Id","state","hyperlinksReader","Options","module","exports"],"sources":["../../../../lib/stream/xlsx/workbook-reader.js"],"sourcesContent":["const fs = require('fs');\r\nconst {EventEmitter} = require('events');\r\nconst {PassThrough, Readable} = require('readable-stream');\r\nconst nodeStream = require('stream');\r\nconst unzip = require('unzipper');\r\nconst tmp = require('tmp');\r\nconst iterateStream = require('../../utils/iterate-stream');\r\nconst parseSax = require('../../utils/parse-sax');\r\n\r\nconst StyleManager = require('../../xlsx/xform/style/styles-xform');\r\nconst WorkbookXform = require('../../xlsx/xform/book/workbook-xform');\r\nconst RelationshipsXform = require('../../xlsx/xform/core/relationships-xform');\r\n\r\nconst WorksheetReader = require('./worksheet-reader');\r\nconst HyperlinkReader = require('./hyperlink-reader');\r\n\r\ntmp.setGracefulCleanup();\r\n\r\nclass WorkbookReader extends EventEmitter {\r\n  constructor(input, options = {}) {\r\n    super();\r\n\r\n    this.input = input;\r\n\r\n    this.options = {\r\n      worksheets: 'emit',\r\n      sharedStrings: 'cache',\r\n      hyperlinks: 'ignore',\r\n      styles: 'ignore',\r\n      entries: 'ignore',\r\n      ...options,\r\n    };\r\n\r\n    this.styles = new StyleManager();\r\n    this.styles.init();\r\n  }\r\n\r\n  _getStream(input) {\r\n    if (input instanceof nodeStream.Readable || input instanceof Readable) {\r\n      return input;\r\n    }\r\n    if (typeof input === 'string') {\r\n      return fs.createReadStream(input);\r\n    }\r\n    throw new Error(`Could not recognise input: ${input}`);\r\n  }\r\n\r\n  async read(input, options) {\r\n    try {\r\n      for await (const {eventType, value} of this.parse(input, options)) {\r\n        switch (eventType) {\r\n          case 'shared-strings':\r\n            this.emit(eventType, value);\r\n            break;\r\n          case 'worksheet':\r\n            this.emit(eventType, value);\r\n            await value.read();\r\n            break;\r\n          case 'hyperlinks':\r\n            this.emit(eventType, value);\r\n            break;\r\n        }\r\n      }\r\n      this.emit('end');\r\n      this.emit('finished');\r\n    } catch (error) {\r\n      this.emit('error', error);\r\n    }\r\n  }\r\n\r\n  async *[Symbol.asyncIterator]() {\r\n    for await (const {eventType, value} of this.parse()) {\r\n      if (eventType === 'worksheet') {\r\n        yield value;\r\n      }\r\n    }\r\n  }\r\n\r\n  async *parse(input, options) {\r\n    if (options) this.options = options;\r\n    const stream = (this.stream = this._getStream(input || this.input));\r\n    const zip = unzip.Parse({forceStream: true});\r\n    stream.pipe(zip);\r\n\r\n    // worksheets, deferred for parsing after shared strings reading\r\n    const waitingWorkSheets = [];\r\n\r\n    for await (const entry of iterateStream(zip)) {\r\n      let match;\r\n      let sheetNo;\r\n      switch (entry.path) {\r\n        case '_rels/.rels':\r\n          break;\r\n        case 'xl/_rels/workbook.xml.rels':\r\n          await this._parseRels(entry);\r\n          break;\r\n        case 'xl/workbook.xml':\r\n          await this._parseWorkbook(entry);\r\n          break;\r\n        case 'xl/sharedStrings.xml':\r\n          yield* this._parseSharedStrings(entry);\r\n          break;\r\n        case 'xl/styles.xml':\r\n          await this._parseStyles(entry);\r\n          break;\r\n        default:\r\n          if (entry.path.match(/xl\\/worksheets\\/sheet\\d+[.]xml/)) {\r\n            match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\r\n            sheetNo = match[1];\r\n            if (this.sharedStrings && this.workbookRels) {\r\n              yield* this._parseWorksheet(iterateStream(entry), sheetNo);\r\n            } else {\r\n              // create temp file for each worksheet\r\n              await new Promise((resolve, reject) => {\r\n                tmp.file((err, path, fd, tempFileCleanupCallback) => {\r\n                  if (err) {\r\n                    return reject(err);\r\n                  }\r\n                  waitingWorkSheets.push({sheetNo, path, tempFileCleanupCallback});\r\n\r\n                  const tempStream = fs.createWriteStream(path);\r\n                  tempStream.on('error', reject);\r\n                  entry.pipe(tempStream);\r\n                  return tempStream.on('finish', () => {\r\n                    return resolve();\r\n                  });\r\n                });\r\n              });\r\n            }\r\n          } else if (entry.path.match(/xl\\/worksheets\\/_rels\\/sheet\\d+[.]xml.rels/)) {\r\n            match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\r\n            sheetNo = match[1];\r\n            yield* this._parseHyperlinks(iterateStream(entry), sheetNo);\r\n          }\r\n          break;\r\n      }\r\n      entry.autodrain();\r\n    }\r\n\r\n    for (const {sheetNo, path, tempFileCleanupCallback} of waitingWorkSheets) {\r\n      let fileStream = fs.createReadStream(path);\r\n      // TODO: Remove once node v8 is deprecated\r\n      // Detect and upgrade old fileStreams\r\n      if (!fileStream[Symbol.asyncIterator]) {\r\n        fileStream = fileStream.pipe(new PassThrough());\r\n      }\r\n      yield* this._parseWorksheet(fileStream, sheetNo);\r\n      tempFileCleanupCallback();\r\n    }\r\n  }\r\n\r\n  _emitEntry(payload) {\r\n    if (this.options.entries === 'emit') {\r\n      this.emit('entry', payload);\r\n    }\r\n  }\r\n\r\n  async _parseRels(entry) {\r\n    const xform = new RelationshipsXform();\r\n    this.workbookRels = await xform.parseStream(iterateStream(entry));\r\n  }\r\n\r\n  async _parseWorkbook(entry) {\r\n    this._emitEntry({type: 'workbook'});\r\n\r\n    const workbook = new WorkbookXform();\r\n    await workbook.parseStream(iterateStream(entry));\r\n\r\n    this.properties = workbook.map.workbookPr;\r\n    this.model = workbook.model;\r\n  }\r\n\r\n  async *_parseSharedStrings(entry) {\r\n    this._emitEntry({type: 'shared-strings'});\r\n    switch (this.options.sharedStrings) {\r\n      case 'cache':\r\n        this.sharedStrings = [];\r\n        break;\r\n      case 'emit':\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    let text = null;\r\n    let richText = [];\r\n    let index = 0;\r\n    let font = null;\r\n    for await (const events of parseSax(iterateStream(entry))) {\r\n      for (const {eventType, value} of events) {\r\n        if (eventType === 'opentag') {\r\n          const node = value;\r\n          switch (node.name) {\r\n            case 'b':\r\n              font = font || {};\r\n              font.bold = true;\r\n              break;\r\n            case 'charset':\r\n              font = font || {};\r\n              font.charset = parseInt(node.attributes.charset, 10);\r\n              break;\r\n            case 'color':\r\n              font = font || {};\r\n              font.color = {};\r\n              if (node.attributes.rgb) {\r\n                font.color.argb = node.attributes.argb;\r\n              }\r\n              if (node.attributes.val) {\r\n                font.color.argb = node.attributes.val;\r\n              }\r\n              if (node.attributes.theme) {\r\n                font.color.theme = node.attributes.theme;\r\n              }\r\n              break;\r\n            case 'family':\r\n              font = font || {};\r\n              font.family = parseInt(node.attributes.val, 10);\r\n              break;\r\n            case 'i':\r\n              font = font || {};\r\n              font.italic = true;\r\n              break;\r\n            case 'outline':\r\n              font = font || {};\r\n              font.outline = true;\r\n              break;\r\n            case 'rFont':\r\n              font = font || {};\r\n              font.name = node.value;\r\n              break;\r\n            case 'si':\r\n              font = null;\r\n              richText = [];\r\n              text = null;\r\n              break;\r\n            case 'sz':\r\n              font = font || {};\r\n              font.size = parseInt(node.attributes.val, 10);\r\n              break;\r\n            case 'strike':\r\n              break;\r\n            case 't':\r\n              text = null;\r\n              break;\r\n            case 'u':\r\n              font = font || {};\r\n              font.underline = true;\r\n              break;\r\n            case 'vertAlign':\r\n              font = font || {};\r\n              font.vertAlign = node.attributes.val;\r\n              break;\r\n          }\r\n        } else if (eventType === 'text') {\r\n          text = text ? text + value : value;\r\n        } else if (eventType === 'closetag') {\r\n          const node = value;\r\n          switch (node.name) {\r\n            case 'r':\r\n              richText.push({\r\n                font,\r\n                text,\r\n              });\r\n\r\n              font = null;\r\n              text = null;\r\n              break;\r\n            case 'si':\r\n              if (this.options.sharedStrings === 'cache') {\r\n                this.sharedStrings.push(richText.length ? {richText} : text);\r\n              } else if (this.options.sharedStrings === 'emit') {\r\n                yield {index: index++, text: richText.length ? {richText} : text};\r\n              }\r\n\r\n              richText = [];\r\n              font = null;\r\n              text = null;\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async _parseStyles(entry) {\r\n    this._emitEntry({type: 'styles'});\r\n    if (this.options.styles === 'cache') {\r\n      this.styles = new StyleManager();\r\n      await this.styles.parseStream(iterateStream(entry));\r\n    }\r\n  }\r\n\r\n  *_parseWorksheet(iterator, sheetNo) {\r\n    this._emitEntry({type: 'worksheet', id: sheetNo});\r\n    const worksheetReader = new WorksheetReader({\r\n      workbook: this,\r\n      id: sheetNo,\r\n      iterator,\r\n      options: this.options,\r\n    });\r\n\r\n    const matchingRel = (this.workbookRels || []).find(rel => rel.Target === `worksheets/sheet${sheetNo}.xml`);\r\n    const matchingSheet = matchingRel && (this.model.sheets || []).find(sheet => sheet.rId === matchingRel.Id);\r\n    if (matchingSheet) {\r\n      worksheetReader.id = matchingSheet.id;\r\n      worksheetReader.name = matchingSheet.name;\r\n      worksheetReader.state = matchingSheet.state;\r\n    }\r\n    if (this.options.worksheets === 'emit') {\r\n      yield {eventType: 'worksheet', value: worksheetReader};\r\n    }\r\n  }\r\n\r\n  *_parseHyperlinks(iterator, sheetNo) {\r\n    this._emitEntry({type: 'hyperlinks', id: sheetNo});\r\n    const hyperlinksReader = new HyperlinkReader({\r\n      workbook: this,\r\n      id: sheetNo,\r\n      iterator,\r\n      options: this.options,\r\n    });\r\n    if (this.options.hyperlinks === 'emit') {\r\n      yield {eventType: 'hyperlinks', value: hyperlinksReader};\r\n    }\r\n  }\r\n}\r\n\r\n// for reference - these are the valid values for options\r\nWorkbookReader.Options = {\r\n  worksheets: ['emit', 'ignore'],\r\n  sharedStrings: ['cache', 'emit', 'ignore'],\r\n  hyperlinks: ['cache', 'emit', 'ignore'],\r\n  styles: ['cache', 'ignore'],\r\n  entries: ['emit', 'ignore'],\r\n};\r\n\r\nmodule.exports = WorkbookReader;\r\n"],"mappings":"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"}