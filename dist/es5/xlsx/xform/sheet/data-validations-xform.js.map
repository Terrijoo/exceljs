{"version":3,"file":"data-validations-xform.js","names":["_","require","utils","colCache","BaseXform","Range","assign","definedName","attributes","name","defaultValue","value","undefined","assignBool","parseBoolean","optimiseDataValidations","model","dvList","map","dataValidation","address","marked","sort","a","b","strcmp","dvMap","keyBy","matchCol","addr","height","col","i","otherAddress","encodeAddress","row","isEqual","dv","decodeEx","dimensions","sqref","width","j","bottom","right","concat","filter","Boolean","DataValidationsXform","tag","render","xmlStream","optimizedModel","length","openNode","count","forEach","type","addAttribute","operator","allowBlank","showInputMessage","promptTitle","prompt","showErrorMessage","errorStyle","errorTitle","error","formulae","formula","index","writeText","dateToExcel","Date","closeNode","parseOpen","node","_address","_dataValidation","_formula","parseText","text","push","parseClose","list","split","includes","range","forEachAddress","join","parseInt","parseFloat","excelToDate","module","exports"],"sources":["../../../../../lib/xlsx/xform/sheet/data-validations-xform.js"],"sourcesContent":["const _ = require('../../../utils/under-dash');\r\nconst utils = require('../../../utils/utils');\r\nconst colCache = require('../../../utils/col-cache');\r\nconst BaseXform = require('../base-xform');\r\nconst Range = require('../../../doc/range');\r\n\r\nfunction assign(definedName, attributes, name, defaultValue) {\r\n  const value = attributes[name];\r\n  if (value !== undefined) {\r\n    definedName[name] = value;\r\n  } else if (defaultValue !== undefined) {\r\n    definedName[name] = defaultValue;\r\n  }\r\n}\r\n\r\nfunction assignBool(definedName, attributes, name, defaultValue) {\r\n  const value = attributes[name];\r\n  if (value !== undefined) {\r\n    definedName[name] = utils.parseBoolean(value);\r\n  } else if (defaultValue !== undefined) {\r\n    definedName[name] = defaultValue;\r\n  }\r\n}\r\n\r\nfunction optimiseDataValidations(model) {\r\n  // Squeeze alike data validations together into rectangular ranges\r\n  // to reduce file size and speed up Excel load time\r\n  const dvList = _.map(model, (dataValidation, address) => ({\r\n    address,\r\n    dataValidation,\r\n    marked: false,\r\n  })).sort((a, b) => _.strcmp(a.address, b.address));\r\n  const dvMap = _.keyBy(dvList, 'address');\r\n  const matchCol = (addr, height, col) => {\r\n    for (let i = 0; i < height; i++) {\r\n      const otherAddress = colCache.encodeAddress(addr.row + i, col);\r\n      if (!model[otherAddress] || !_.isEqual(model[addr.address], model[otherAddress])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n  return dvList\r\n    .map(dv => {\r\n      if (!dv.marked) {\r\n        const addr = colCache.decodeEx(dv.address);\r\n        if (addr.dimensions) {\r\n          dvMap[addr.dimensions].marked = true;\r\n          return {\r\n            ...dv.dataValidation,\r\n            sqref: dv.address,\r\n          };\r\n        }\r\n\r\n        // iterate downwards - finding matching cells\r\n        let height = 1;\r\n        let otherAddress = colCache.encodeAddress(addr.row + height, addr.col);\r\n        while (model[otherAddress] && _.isEqual(dv.dataValidation, model[otherAddress])) {\r\n          height++;\r\n          otherAddress = colCache.encodeAddress(addr.row + height, addr.col);\r\n        }\r\n\r\n        // iterate rightwards...\r\n\r\n        let width = 1;\r\n        while (matchCol(addr, height, addr.col + width)) {\r\n          width++;\r\n        }\r\n\r\n        // mark all included addresses\r\n        for (let i = 0; i < height; i++) {\r\n          for (let j = 0; j < width; j++) {\r\n            otherAddress = colCache.encodeAddress(addr.row + i, addr.col + j);\r\n            dvMap[otherAddress].marked = true;\r\n          }\r\n        }\r\n\r\n        if (height > 1 || width > 1) {\r\n          const bottom = addr.row + (height - 1);\r\n          const right = addr.col + (width - 1);\r\n          return {\r\n            ...dv.dataValidation,\r\n            sqref: `${dv.address}:${colCache.encodeAddress(bottom, right)}`,\r\n          };\r\n        }\r\n        return {\r\n          ...dv.dataValidation,\r\n          sqref: dv.address,\r\n        };\r\n      }\r\n      return null;\r\n    })\r\n    .filter(Boolean);\r\n}\r\n\r\nclass DataValidationsXform extends BaseXform {\r\n  get tag() {\r\n    return 'dataValidations';\r\n  }\r\n\r\n  render(xmlStream, model) {\r\n    const optimizedModel = optimiseDataValidations(model);\r\n    if (optimizedModel.length) {\r\n      xmlStream.openNode('dataValidations', {count: optimizedModel.length});\r\n\r\n      optimizedModel.forEach(value => {\r\n        xmlStream.openNode('dataValidation');\r\n\r\n        if (value.type !== 'any') {\r\n          xmlStream.addAttribute('type', value.type);\r\n\r\n          if (value.operator && value.type !== 'list' && value.operator !== 'between') {\r\n            xmlStream.addAttribute('operator', value.operator);\r\n          }\r\n          if (value.allowBlank) {\r\n            xmlStream.addAttribute('allowBlank', '1');\r\n          }\r\n        }\r\n        if (value.showInputMessage) {\r\n          xmlStream.addAttribute('showInputMessage', '1');\r\n        }\r\n        if (value.promptTitle) {\r\n          xmlStream.addAttribute('promptTitle', value.promptTitle);\r\n        }\r\n        if (value.prompt) {\r\n          xmlStream.addAttribute('prompt', value.prompt);\r\n        }\r\n        if (value.showErrorMessage) {\r\n          xmlStream.addAttribute('showErrorMessage', '1');\r\n        }\r\n        if (value.errorStyle) {\r\n          xmlStream.addAttribute('errorStyle', value.errorStyle);\r\n        }\r\n        if (value.errorTitle) {\r\n          xmlStream.addAttribute('errorTitle', value.errorTitle);\r\n        }\r\n        if (value.error) {\r\n          xmlStream.addAttribute('error', value.error);\r\n        }\r\n        xmlStream.addAttribute('sqref', value.sqref);\r\n        (value.formulae || []).forEach((formula, index) => {\r\n          xmlStream.openNode(`formula${index + 1}`);\r\n          if (value.type === 'date') {\r\n            xmlStream.writeText(utils.dateToExcel(new Date(formula)));\r\n          } else {\r\n            xmlStream.writeText(formula);\r\n          }\r\n          xmlStream.closeNode();\r\n        });\r\n        xmlStream.closeNode();\r\n      });\r\n      xmlStream.closeNode();\r\n    }\r\n  }\r\n\r\n  parseOpen(node) {\r\n    switch (node.name) {\r\n      case 'dataValidations':\r\n        this.model = {};\r\n        return true;\r\n\r\n      case 'dataValidation': {\r\n        this._address = node.attributes.sqref;\r\n        const dataValidation = {type: node.attributes.type || 'any', formulae: []};\r\n\r\n        if (node.attributes.type) {\r\n          assignBool(dataValidation, node.attributes, 'allowBlank');\r\n        }\r\n        assignBool(dataValidation, node.attributes, 'showInputMessage');\r\n        assignBool(dataValidation, node.attributes, 'showErrorMessage');\r\n\r\n        switch (dataValidation.type) {\r\n          case 'any':\r\n          case 'list':\r\n          case 'custom':\r\n            break;\r\n          default:\r\n            assign(dataValidation, node.attributes, 'operator', 'between');\r\n            break;\r\n        }\r\n        assign(dataValidation, node.attributes, 'promptTitle');\r\n        assign(dataValidation, node.attributes, 'prompt');\r\n        assign(dataValidation, node.attributes, 'errorStyle');\r\n        assign(dataValidation, node.attributes, 'errorTitle');\r\n        assign(dataValidation, node.attributes, 'error');\r\n\r\n        this._dataValidation = dataValidation;\r\n        return true;\r\n      }\r\n\r\n      case 'formula1':\r\n      case 'formula2':\r\n        this._formula = [];\r\n        return true;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this._formula) {\r\n      this._formula.push(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    switch (name) {\r\n      case 'dataValidations':\r\n        return false;\r\n      case 'dataValidation': {\r\n        if (!this._dataValidation.formulae || !this._dataValidation.formulae.length) {\r\n          delete this._dataValidation.formulae;\r\n          delete this._dataValidation.operator;\r\n        }\r\n        // The four known cases: 1. E4:L9 N4:U9  2.E4 L9  3. N4:U9  4. E4\r\n        const list = this._address.split(/\\s+/g) || [];\r\n        list.forEach(addr => {\r\n          if (addr.includes(':')) {\r\n            const range = new Range(addr);\r\n            range.forEachAddress(address => {\r\n              this.model[address] = this._dataValidation;\r\n            });\r\n          } else {\r\n            this.model[addr] = this._dataValidation;\r\n          }\r\n        });\r\n        return true;\r\n      }\r\n      case 'formula1':\r\n      case 'formula2': {\r\n        let formula = this._formula.join('');\r\n        switch (this._dataValidation.type) {\r\n          case 'whole':\r\n          case 'textLength':\r\n            formula = parseInt(formula, 10);\r\n            break;\r\n          case 'decimal':\r\n            formula = parseFloat(formula);\r\n            break;\r\n          case 'date':\r\n            formula = utils.excelToDate(parseFloat(formula));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this._dataValidation.formulae.push(formula);\r\n        this._formula = undefined;\r\n        return true;\r\n      }\r\n      default:\r\n        return true;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = DataValidationsXform;\r\n"],"mappings":"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"}